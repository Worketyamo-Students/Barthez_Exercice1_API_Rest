// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  user_id  String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String @unique
  password String

  // un utilisateur peut avoir plusieurs emprunts
  emprunts Loand[]

  // Un utilisateur peut recevoir plusieur notifications
  notifications Notification[]

  //Limiter ne nombre d'emprunts a 5, comme ça chaque utilisateur sera bloqué
  nbEmprunts Int @default(0)
}

model Book {
  book_id       String  @id @default(auto()) @map("_id") @db.ObjectId
  title         String  @unique
  author        String
  description   String
  publicateYear Int
  ISBN          String?
  status        State   @default(disponible)

  // Un livre peut faire l'objet de plusieurs emprunts
  emprunts Loand[]

  //un livre peut a lui seul recevoir plusieur notifications et chaque notification fait reference à un et un seul livre
  notification Notification[]
}

model Loand {
  loand_id  String    @id @default(auto()) @map("_id") @db.ObjectId
  loandDate DateTime  @default(now())
  backDate  DateTime?

  // un emprunt fait l'objet d'un seul livre à la fois
  book   Book   @relation(fields: [bookID], references: [book_id])
  bookID String @db.ObjectId

  // Un emprunt peut faire allusion a un et un seul utilisateurs
  user   User   @relation(fields: [userID], references: [user_id])
  userID String @db.ObjectId
}

model Notification {
  notification_id String @id @default(auto()) @map("_id") @db.ObjectId
  message         String

  // Une notification fait reference a un seul livre qui est devenu disponible
  livre   Book   @relation(fields: [livreID], references: [book_id])
  livreID String @db.ObjectId

  // Une notification est envoyé a une et une seule personne à la fois
  responsableNotif User   @relation(fields: [userID], references: [user_id])
  userID           String @db.ObjectId
}

enum State {
  emprunte
  disponible
}
